name: Lint

on:
  pull_request:

jobs:
  lint-js-python:
    name: Lint JS and Python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9.5

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Configure pnpm
        run: |
          pnpm config set auto-install-peers true
          pnpm config set exclude-links-from-lockfile true

      - name: Install JS dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Run JS linting
        run: |
          pnpm run lint

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install Python dependencies
        working-directory: packages/python-sdk
        run: |
          poetry install

      - name: Run Python linting
        working-directory: packages/python-sdk
        run: |
          poetry run ruff check .

  lint-go:
    name: Lint Go
    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v2.1.6

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'infra/go.work'
      - id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT
        working-directory: infra

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: infra
